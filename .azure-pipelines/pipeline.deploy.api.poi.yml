#test pipline with Envs
trigger:
  branches:
    include:
      - main
  paths:
    include:
      - apis/poi

pool:
  vmImage: ubuntu-latest

variables:
  - group: apim-infra-api-variables
  - name: WORKDIR
    value: "$(Build.SourcesDirectory)/apis/poi/web"
  - name: DOCKER_IMAGE_BASE_NAME
    value: "apiops/api-poi"
  - name: API_NAME
    value: "poi"

stages:
  - stage: Build
    displayName: Build
    jobs:
      - job: Build
        displayName: Build
        steps:
          - checkout: self

          - task: Docker@2
            displayName: Build an image
            inputs:
              containerRegistry: "AzureContainerRegistry"
              repository: "$(DOCKER_IMAGE_BASE_NAME)"
              command: "build"
              Dockerfile: "$(WORKDIR)/Dockerfile"
              buildContext: "$(WORKDIR)"
              arguments: "--build-arg build_version=$(Build.BuildId)"
              tags: $(Build.BuildId)

          - task: Docker@2
            displayName: Push an image
            inputs:
              containerRegistry: "AzureContainerRegistry"
              repository: "$(DOCKER_IMAGE_BASE_NAME)"
              command: "push"
              tags: $(Build.BuildId)

  - stage: Staging
    displayName: "Staging (Blue)"
    jobs:
      - deployment: Staging
        displayName: Staging
        environment: poi-production
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: "AzureRM"
                    azureSubscription: "masterconnection"
                    appType: webAppContainer
                    WebAppName: "$(RESOURCES_PREFIX)$(API_NAME)"
                    deployToSlotOrASE: true
                    ResourceGroupName: "$(RESOURCES_PREFIX)rg"
                    SlotName: staging
                    DockerNamespace: "$(RESOURCES_PREFIX)cr.azurecr.io"
                    DockerRepository: $(DOCKER_IMAGE_BASE_NAME)
                    DockerImageTag: $(Build.BuildId)

                - task: AzureAppServiceManage@0
                  inputs:
                    azureSubscription: "masterconnection"
                    Action: "Stop Azure App Service"
                    WebAppName: "$(RESOURCES_PREFIX)$(API_NAME)"
                    SpecifySlotOrASE: true
                    ResourceGroupName: "$(RESOURCES_PREFIX)rg"
                    Slot: staging

                - task: AzureAppServiceManage@0
                  inputs:
                    azureSubscription: "masterconnection"
                    Action: "Start Azure App Service"
                    WebAppName: "$(RESOURCES_PREFIX)$(API_NAME)"
                    SpecifySlotOrASE: true
                    ResourceGroupName: "$(RESOURCES_PREFIX)rg"
                    Slot: staging

  - stage: Production
    displayName: "Production (Green)"
    jobs:
      - deployment: Production
        displayName: Production
        environment: poi-production
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureAppServiceManage@0
                  inputs:
                    azureSubscription: "masterconnection"
                    Action: "Swap Slots"
                    WebAppName: "$(RESOURCES_PREFIX)$(API_NAME)"
                    ResourceGroupName: "$(RESOURCES_PREFIX)rg"
                    SourceSlot: "staging"

